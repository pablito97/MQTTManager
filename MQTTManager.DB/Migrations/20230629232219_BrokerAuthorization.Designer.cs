// <auto-generated />
using System;
using MQTTManager.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MQTTManager.DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230629232219_BrokerAuthorization")]
    partial class BrokerAuthorization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MQTTManager.DB.Model.BrokerAuthorizationModel", b =>
                {
                    b.Property<int>("BrokerId")
                        .HasColumnType("integer");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("BrokerId");

                    b.ToTable("BrokerAuthorization");
                });

            modelBuilder.Entity("MQTTManager.DB.Model.BrokerConfigurationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Authorization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Default")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BrokerConfig");
                });

            modelBuilder.Entity("MQTTManager.DB.Model.MessageLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("MessageLogs");
                });

            modelBuilder.Entity("MQTTManager.DB.Model.BrokerAuthorizationModel", b =>
                {
                    b.HasOne("MQTTManager.DB.Model.BrokerConfigurationModel", "BrokerConfiguration")
                        .WithOne("BrokerAuthorization")
                        .HasForeignKey("MQTTManager.DB.Model.BrokerAuthorizationModel", "BrokerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrokerConfiguration");
                });

            modelBuilder.Entity("MQTTManager.DB.Model.BrokerConfigurationModel", b =>
                {
                    b.Navigation("BrokerAuthorization")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
